###LOAD LIBRARIES
library(missForest)
library(magrittr)
library(dplyr)
library(Hmisc)
library(reshape2)
library(VIM)

###set working directory SIMULATED
setwd("/Users/med-tv_/Documents/Projects/DPP_NMR_lipidomics/")
###set working directory DPP
#setwd("XXXX")

###CALLING IN DATASET

#df <- readRDS("DPP_for_analysis.rds") 

##################################data preparation###########################

# GC: import DPP dataset from SAS library
library(RODBC)
myconn <-odbcConnect("DPP Share",believeNRows = FALSE)
df <- sqlQuery(myconn, "select * from O141PUBS.LTF225", as.is=TRUE)
odbcCloseAll()


# read in Tibor's simulated dataset from Step0_A
df_simulate <- readRDS("DPP_for_analysis.rds")

# GC: remove vars that are not in df_simulate from df
df <- df %>% select(names(df_simulate))



# GC: convert char "treatment_arm" in df to numeric in order to match the corresponding variable in df_simulate
df$treatment_arm <- recode(df$treatment_arm, "Placebo"=1, "Lifestyle"=2, "Metformin"=3)

# GC: convert numeric "t2d_hist" and "gdm_hist" in df to factor for imputation
df$t2d_hist <- factor(df$t2d_hist)
df$gdm_hist <- factor(df$gdm_hist)


############################################################################

###VECTORS AND SETUP
continuous <- c("age", "bmi", "waist", "fasting_glu", "ogtt_glu", "hba1c", "IFI", "syst_bp", "IG_RAT", "tg0", "tc0", "ldl0", "hdl0", "apob0", "apoa10", "hdl_l0", "hdl_m0", "hdl_s0", "hdltotal0", "H7P0", "H6P0", "H5P0", "H4P0", "H3P0", "H2P0", "H1P0", "ldl_l0", "ldl_m0", "ldl_s0", "ldltotal0", "trl_vl0", "trl_l0", "trl_m0", "trl_s0", "trl_vs0", "trltotal0", "hdlsize0", "ldlsize0", "trlsize0", "trl_tg0", "trl_c0", "ppd0", "tg1", "tc1", "ldl1", "hdl1", "apob1", "apoa11", "hdl_l1", "hdl_m1", "hdl_s1", "hdltotal1", "H7P1", "H6P1", "H5P1", "H4P1", "H3P1", "H2P1", "H1P1", "ldl_l1", "ldl_m1", "ldl_s1", "ldltotal1", "trl_vl1", "trl_l1", "trl_m1", "trl_s1", "trl_vs1", "trltotal1", "hdlsize1", "ldlsize1", "trlsize1", "trl_tg1", "trl_c1", "ppd1", "Val", "Leu", "Ileu", "Ala", "GlycA", "Ctr", "KetBod", "B_HB", "AcAc", "Acetone", "Glycine", "Val1", "Leu1", "Ileu1", "Ala1", "GlycA1", "Ctr1", "KetBod1", "B_HB1", "AcAc1", "Acetone1", "Glycine1")
categorical <- c("ethnicity", "female" ,"treatment_arm", "t2d_hist", "gdm_hist", "treatment_arm", "bp_med", "lipid_med", "statin_med", "diab_med", "t2d_short", "t2d_long")
lipids <- c("tg0", "tc0", "ldl0", "hdl0", "apob0", "apoa10", "hdl_l0", "hdl_m0", "hdl_s0", "hdltotal0", "H7P0", "H6P0", "H5P0", "H4P0", "H3P0", "H2P0", "H1P0", "ldl_l0", "ldl_m0", "ldl_s0", "ldltotal0", "trl_vl0", "trl_l0", "trl_m0", "trl_s0", "trl_vs0", "trltotal0", "hdlsize0", "ldlsize0", "trlsize0", "trl_tg0", "trl_c0", "ppd0", "tg1", "tc1", "ldl1", "hdl1", "apob1", "apoa11", "hdl_l1", "hdl_m1", "hdl_s1", "hdltotal1", "H7P1", "H6P1", "H5P1", "H4P1", "H3P1", "H2P1", "H1P1", "ldl_l1", "ldl_m1", "ldl_s1", "ldltotal1", "trl_vl1", "trl_l1", "trl_m1", "trl_s1", "trl_vs1", "trltotal1", "hdlsize1", "ldlsize1", "trlsize1", "trl_tg1", "trl_c1", "ppd1", "Val", "Leu", "Ileu", "Ala", "GlycA", "Ctr", "KetBod", "B_HB", "AcAc", "Acetone", "Glycine", "Val1", "Leu1", "Ileu1", "Ala1", "GlycA1", "Ctr1", "KetBod1", "B_HB1", "AcAc1", "Acetone1", "Glycine1")
#randomly remove 15% of lipid data
#this is only used when there is absolutely no missingness in the data
if (sum(is.na(df)) == 0) {
  lipids_withNA <- prodNA(df[,lipids], noNA = 0.15)
  lipidvars <- names(df) %in% lipids
  df <- cbind(df[!lipidvars], lipids_withNA)
}

###STUDY SPECIFIC EXCLUSIONS
#any other study specific exclusion should be here

y <- df[,continuous]
###Tukey method - 25th percentile - 3IQR; 75th percentile +3IQR set to those values
tukey <- function(x) {
  iqr25 <- quantile(x, 0.25, na.rm = T) 
  iqr75 <- quantile(x, 0.75, na.rm = T) 
  IQR3 <- 3*(iqr75-iqr25)
  setlow <- iqr25-IQR3
  sethigh <- iqr75+IQR3
  ifelse(x<=setlow,setlow,x)
  ifelse(x>=sethigh,sethigh,x)
}
df[,continuous] <- sapply(df[,continuous], tukey)

###MISSING DATA OBSERVATION

df_MAR <- df
#dichotomizing missing values vs nonmissing values (0/1) and calculating Pearson correlation P values
df_MAR[!(is.na(df_MAR))] <- 1
df_MAR[is.na(df_MAR)] <- 0
mycor <- rcorr(as.matrix(df_MAR), type="pearson")
correlations <- as.data.frame(mycor$P)

###matrixplot of missingess patterns
nm1 <- names(df)[colSums(is.na(df)) >0]
arr_X <- df %>%
  arrange_at(vars(nm1), funs(desc(is.na(.))))
df_miss_id <- cbind(c(1:nrow(arr_X)), arr_X)
colnames(df_miss_id) <- c("Observations", colnames(arr_X))
df_melt <- data.table::melt(df_miss_id, id=c("Observations"))
df_melt$value <- as.numeric(df_melt$value)
matrixplot_sorted <- ggplot(df_melt, aes(x=variable, y=Observations)) +
  geom_tile(aes(fill=value)) +
  scale_fill_gradient(low = "white", high = "lightblue") +
  theme(panel.background = element_blank()) +
  ggtitle("Matrix plot of missing data") +
  theme(plot.title = element_text(hjust = 0.5))
pdf("DPP_matrixplot.pdf")
matrixplot_sorted
dev.off()

###plot for missingness cluster
# any_miss <- df[,which(!colSums(is.na(df))==0)]
# 
# yesno <- any_miss %>%
#   is.na
# d <- stats::dist(t(yesno), method = "binary")
# hc <- stats::hclust(d, method= "ward.D")
# hcdata <- ggdendro::dendro_data(hc)
# cluster_plot <- ggdendro::ggdendrogram(hcdata, theme_dendro = FALSE) +
#   ggtitle("Cluster plot of missing data") +
#   theme(plot.title = element_text(hjust = 0.5)) +
#   labs(x = "variable", y= "Height")
# pdf("DPP_missing_cluster.pdf")
# cluster_plot
# dev.off()


###MISSING DATA IMPUTATION
#do not use information on the outcome (T2D) and impute per treatment arm, pulling dataset apart
outcomes <- c("t2d_short", "t2d_long")
outcomevars <- names(df) %in% outcomes
placebo <- subset(df, treatment_arm==1)
lifestyle <- subset(df, treatment_arm==2)
metformin <- subset(df, treatment_arm==3)
placebo_nooutcome <- placebo[!outcomevars]
lifestyle_nooutcome <- lifestyle[!outcomevars]
metformin_nooutcome <- metformin[!outcomevars]
results <- missForest(placebo_nooutcome)
placebo_imputed <- results$ximp
results <- missForest(lifestyle_nooutcome)
lifestyle_imputed <- results$ximp
results <- missForest(metformin_nooutcome)
metformin_imputed <- results$ximp
#remerging full dataset
placebo_m <- cbind(placebo[outcomevars], placebo_imputed)
lifestyle_m <- cbind(lifestyle[outcomevars], lifestyle_imputed)
metformin_m <- cbind(metformin[outcomevars], metformin_imputed)
df_imputed <- rbind(placebo_m,lifestyle_m,metformin_m)

###TRAIT CHANGE VARIABLES
#defining variable names for baseline, follow-up and change
baseline_lipid <- c("tg0", "tc0", "ldl0", "hdl0", "apob0", "apoa10", "hdl_l0", "hdl_m0", "hdl_s0", "hdltotal0", "H7P0", "H6P0", "H5P0", "H4P0", "H3P0", "H2P0", "H1P0", "ldl_l0", "ldl_m0", "ldl_s0", "ldltotal0", "trl_vl0", "trl_l0", "trl_m0", "trl_s0", "trl_vs0", "trltotal0", "hdlsize0", "ldlsize0", "trlsize0", "trl_tg0", "trl_c0", "ppd0", "Val", "Leu", "Ileu", "Ala", "GlycA", "Ctr", "KetBod", "B_HB", "AcAc", "Acetone", "Glycine")
followup_lipid <- c("tg1", "tc1", "ldl1", "hdl1", "apob1", "apoa11", "hdl_l1", "hdl_m1", "hdl_s1", "hdltotal1", "H7P1", "H6P1", "H5P1", "H4P1", "H3P1", "H2P1", "H1P1", "ldl_l1", "ldl_m1", "ldl_s1", "ldltotal1", "trl_vl1", "trl_l1", "trl_m1", "trl_s1", "trl_vs1", "trltotal1", "hdlsize1", "ldlsize1", "trlsize1", "trl_tg1", "trl_c1", "ppd1", "Val1", "Leu1", "Ileu1", "Ala1", "GlycA1", "Ctr1", "KetBod1", "B_HB1", "AcAc1", "Acetone1", "Glycine1")
diff_lipid <- c("tg_d", "tc_d", "ldl_d", "hdl_d", "apob_d", "apoa1_d", "hdl_l_d", "hdl_m_d", "hdl_s_d", "hdltotal_d", "H7P_d", "H6P_d", "H5P_d", "H4P_d", "H3P_d", "H2P_d", "H1P_d", "ldl_l_d", "ldl_m_d", "ldl_s_d", "ldltotal_d", "trl_vl_d", "trl_l_d", "trl_m_d", "trl_s_d", "trl_vs_d", "trltotal_d", "hdlsize_d", "ldlsize_d", "trlsize_d", "trl_tg_d", "trl_c_d", "ppd_d", "Val_d", "Leu_d", "Ileu_d", "Ala_d", "GlycA_d", "Ctr_d", "KetBod_d", "B_HB_d", "AcAc_d", "Acetone_d", "Glycine_d")
#empty columns for change
df_imputed[,diff_lipid] <- NA
#loop to fill in empty column with calculated differences
for (i in 1:length(baseline_lipid)) {
df_imputed[,diff_lipid[i]] <- df_imputed[,followup_lipid[i]] - df_imputed[,baseline_lipid[i]]
}

df_imputed$t2d_short <- as.factor(df_imputed$t2d_short)
df_imputed$t2d_long <- as.factor(df_imputed$t2d_long)
df_imputed$female <- as.factor(df_imputed$female)
df_imputed$ethnicity <- as.factor(df_imputed$ethnicity)
df_imputed$t2d_hist <- as.factor(df_imputed$t2d_hist)
df_imputed$gdm_hist <- as.factor(df_imputed$gdm_hist)
df_imputed$bp_med <- as.factor(df_imputed$bp_med)
df_imputed$lipid_med <- as.factor(df_imputed$lipid_med)

###SAVE IMPUTED DATASET READY FOR ANALYSIS
# saveRDS(df_imputed, file = "DPP_simulated_imputed_dataset.rds")

# GC: change location for myself
saveRDS(df_imputed, file = "P:/Staff/Guannan/LTF225/DPP_simulated_imputed_dataset_GC.rds")
